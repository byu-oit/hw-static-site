name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [dev, stg, prd]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
env:
  tf_version: "1.4.5" # must match value in terraform-iac/*/app/main.tf
  FORCE_COLOR: 3
concurrency: ${{ github.ref }}
jobs:
  env:
    name: Set Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Set up DEV Environment Variables
        if: github.ref == 'refs/heads/dev'
        run: |
          matrix='{
            "env":[
              {
                "environment_name":"dev",
                "tf_working_dir":"./terraform-iac/dev/app",
                "aws_account":"977306314792",
                "aws_gha_role":"hw-static-site-dev-gha",
                "rfc_key_name":"standard_change_sandbox_client_key",
                "rfc_secret_name":"standard_change_sandbox_client_secret",
                "rfc_template_id":"Codepipeline-Standard-Change"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

      - name: Set up STG Environment Variables
        if: github.ref == 'refs/heads/stg'
        run: |
          matrix='{
            "env":[
              {
                "environment_name":"stg",
                "tf_working_dir":"./terraform-iac/stg/app",
                "aws_account":"977306314792",
                "aws_gha_role":"hw-static-site-stg-gha",
                "rfc_key_name":"standard_change_sandbox_client_key",
                "rfc_secret_name":"standard_change_sandbox_client_secret",
                "rfc_template_id":"Codepipeline-Standard-Change"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

      - name: Set up PRD/CPY Environment Variables
        if: github.ref == 'refs/heads/prd'
        # TODO: When prd really is production, in prd environment (first block below):
        # * Change standard_change_sandbox_client_key to standard_change_production_client_key
        # * Change standard_change_sandbox_client_secret to standard_change_production_client_secret
        # You probably don't want to do this in cpy (second block), or you will get two RFCs everytime you push to prd
        run: |
          matrix='{
            "env":[
              {
                "environment_name":"prd",
                "tf_working_dir":"./terraform-iac/prd/app",
                "aws_account":"539738229445",
                "aws_gha_role":"hw-static-site-prd-gha",
                "rfc_key_name":"standard_change_sandbox_client_key",
                "rfc_secret_name":"standard_change_sandbox_client_secret",
                "rfc_template_id":"Codepipeline-Standard-Change"
              },
              {
                "environment_name":"cpy",
                "tf_working_dir":"./terraform-iac/cpy/app",
                "aws_account":"539738229445",
                "aws_gha_role":"hw-static-site-cpy-gha",
                "rfc_key_name":"standard_change_sandbox_client_key",
                "rfc_secret_name":"standard_change_sandbox_client_secret",
                "rfc_template_id":"Codepipeline-Standard-Change"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

    outputs:
      matrix: ${{ env.matrix }}

  build_and_deploy:
    name: Build and Deploy Webapp to S3
    runs-on: ubuntu-latest
    needs: env
    strategy:
      matrix: ${{ fromJson(needs.env.outputs.matrix) }}
      fail-fast: false
    environment:
      name: ${{ matrix.env.environment_name }}
      url: https://${{ steps.url.outputs.stdout }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::${{ matrix.env.aws_account }}:role/${{ matrix.env.aws_gha_role }}"
          role-session-name: ${{ github.sha }}
          aws-region: us-west-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform init

      - name: Terraform Format
        working-directory: "./"
        run: terraform fmt -check -recursive

      - name: Terraform Plan
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform plan -input=false -out=plan

      - name: Analyze Terraform Plan
        uses: byu-oit/github-action-tf-plan-analyzer@v2
        if: github.repository_owner == 'byu-oit'
        # If you're at BYU, but outside the byu-oit GitHub org, you may be able to obtain credentials by contacting cloudoffice@byu.edu
        with:
          working-directory: ${{ matrix.env.tf_working_dir }}
          terraform-plan-file: plan
          divvycloud-username: ${{ secrets.DIVVYCLOUD_USERNAME }}
          divvycloud-password: ${{ secrets.DIVVYCLOUD_PASSWORD }}

      - name: Start Standard Change
        uses: byu-oit/github-action-start-standard-change@v1
        id: start-standard-change
        with:
          client-key: ${{ secrets[matrix.env.rfc_key_name] }}
          client-secret: ${{ secrets[matrix.env.rfc_secret_name] }}
          template-id: ${{ matrix.env.rfc_template_id }}

      - name: Terraform Apply
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform apply plan

      - name: Get Terraform Outputs
        id: terraform-outputs
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: |
          echo "s3_bucket=$(terraform output -raw s3_bucket)" >> $GITHUB_OUTPUT
          echo "cf_distribution_id=$(terraform output -raw cf_distribution_id)" >> $GITHUB_OUTPUT

      - name: Copy src to S3 Site Bucket
        id: deploy
        run: aws s3 sync src s3://${{ steps.terraform-outputs.outputs.s3_bucket }}

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --path '/*' --distribution-id ${{ steps.terraform-outputs.outputs.cf_distribution_id }}

      - name: End Standard Change
        uses: byu-oit/github-action-end-standard-change@v1
        if: always() && steps.start-standard-change.outcome == 'success' # Run if RFC started, even if the deploy failed
        with:
          client-key: ${{ secrets[matrix.env.rfc_key_name] }}
          client-secret: ${{ secrets[matrix.env.rfc_secret_name] }}
          change-sys-id: ${{ steps.start-standard-change.outputs.change-sys-id }}
          work-start: ${{ steps.start-standard-change.outputs.work-start }}
          success: ${{ job.status == 'success' }}

